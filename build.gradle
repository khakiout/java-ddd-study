buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// code analysis
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

group = 'com.khakiout.study'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

findbugs {
    ignoreFailures = true
    findbugsTest.enabled = false
}
tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
tasks.withType(Pmd) {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
checkstyle {
    toolVersion "8.12"
}
tasks.withType(Checkstyle) {
    description 'Check code standard'
    group 'verification'
    configFile file("${project.rootDir}/config/modified_google_checks.xml")
    source fileTree('src/main/java')
    include '**/*.java'
    exclude '**/gen/**'

    classpath = files()
    showViolations true

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

pmd {
    ignoreFailures = true
    pmdTest.enabled = false
}

test {
    useJUnit {
//        exclude '**/*IntegrationTests.class'
    }
}

task integrationTest(type: Test) {
    useJUnit {
        include '**/*IntegrationTests.class'
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile('ch.qos.logback.contrib:logback-json-classic:0.1.5')
    compile('ch.qos.logback.contrib:logback-jackson:0.1.5')
    compile('com.fasterxml.jackson.core:jackson-databind')
    compile('commons-httpclient:commons-httpclient:3.1')
    compile('commons-validator:commons-validator:1.4.0')
    compile('org.glassfish:javax.el:3.0.0')
    compile('org.liquibase:liquibase-core')
    runtime('com.h2database:h2')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
}
